# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
#    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    env:
      GOOGLE_APPLICATION_CREDENTIALS: '${{ secrets.GOOGLE_CREDENTIALS }}'

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu' # See 'Supported distributions' for available options
          java-version: '17'

      # Setup Gradle as build tool
      - uses: actions/checkout@v3
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      # Setup Gradle as buildtool
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      # Setup Gradle as buildtool
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      # Runs a single command using the runners shell
      - name: Build
        run: ./gradlew clean assemble

      # Runs a set of commands using the runners shell
      - name: Test
        run: ./gradlew test

      - id: auth
        name:  Authenticate to Google Cloud
        uses: google-github-actions/auth@v0
        with:
          credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'

      - name: Login to Artifact Registry
        uses: docker/login-action@v1
        with:
          registry: europe-north1-docker.pkg.dev
          username: 'oauth2accesstoken'
          password: ${{ secrets.GOOGLE_CREDENTIALS}} #${{ steps.auth.outputs.access_token }}

      - name: Get Project Name
        id: project-name
        run: ./gradlew properties --no-daemon --console=plain |grep "^name:" |awk '{printf $2}'

      - name: Get Project Version
        id: project-version
        run: ./gradlew properties --no-daemon --console=plain |grep "^version:" |awk '{printf $2}'

      - name: Build and push to Google Artifact Repository
        uses: docker/build-push-action@v2
        with:
          context: ./app/docker
          push: true
          tags: ${{secrets.GOOGLE_DEFAULT_REGION }}-docker-pkg.dev/${{ secrets.GOOGLE_PROJECT_NAME }}/${{ steps.project-name }}:${{ steps.project-version }}