# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
#    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu' # See 'Supported distributions' for available options
          java-version: '17'

      # Setup Gradle as build tool
#      - uses: actions/checkout@v3
#      - name: Setup Gradle
#        uses: gradle/gradle-build-action@v2

      # Runs a single command using the runners shell
      - name: Build
        run: ${{github.workspace}}/gradlew clean assemble


      - name: Test
        run: ${{github.workspace}}/gradlew test

#      - id: auth
#        name:  Authenticate to Google Cloud
#        uses: google-github-actions/auth@v0
#        with:
#          credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'


  maven:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu' # See 'Supported distributions' for available options
          java-version: '17'

      - name: Build
        run: ${{github.workspace}}/gradlew build -x test

      - name: Get Project Group
        id: project-group
        run: echo "::set-output name=PROJECT_NAME::$(${{github.workspace}}/gradlew properties --no-daemon --console=plain |grep '^group:' |awk '{printf $2}')"

      - name: Get Project Name
        id: project-name
        run: echo "::set-output name=PROJECT_NAME::$(${{github.workspace}}/gradlew properties --no-daemon --console=plain |grep '^name:' |awk '{printf $2}')"

      - name: Get Project Version
        id: project-version
        run: echo "::set-output name=VERSION_NAME::$(${{github.workspace}}/gradlew properties --no-daemon --console=plain |grep '^version:' |awk '{printf $2}')"

      - name: Nexus Repo Publish Artifact
        uses: sonatype-nexus-community/nexus-repo-github-action@master
        with:
          serverUrl: https://nexus.appx-labs.com/repository/maven-releases/
          username: ${{ secrets.NEXUS_USERNAME }}
          password: ${{ secrets.NEXUS_PASSWORD }}
          format: maven2
          repository: maven-releases
          coordinates: groupId=${{ steps.project-name.outputs.PROJECT_NAME }} artifactId=${{ steps.project-name.outputs.PROJECT_NAME }} version=${{ steps.project-version.outputs.VERSION_NAME }}
          assets: extension=jar
          filename: ./build/libs/${{ steps.project-name.outputs.PROJECT_NAME }}-${{ steps.project-version.outputs.VERSION_NAME }}.jar

      - name: Nexus Repo Publish TestArtifact
        uses: sonatype-nexus-community/nexus-repo-github-action@master
        with:
          serverUrl: https://nexus.appx-labs.com/repository/maven-releases/
          username: ${{ secrets.NEXUS_USERNAME }}
          password: ${{ secrets.NEXUS_PASSWORD }}
          format: maven2
          repository: maven-releases
          coordinates: groupId=${{ steps.project-name.outputs.PROJECT_NAME }} artifactId=${{ steps.project-name.outputs.PROJECT_NAME }}-test version=${{ steps.project-version.outputs.VERSION_NAME }}
          assets: extension=jar
          filename: ./build/libs/${{ steps.project-name.outputs.PROJECT_NAME }}-test-${{ steps.project-version.outputs.VERSION_NAME }}.jar

  docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu' # See 'Supported distributions' for available options
          java-version: '17'

      - name: Build
        run: ${{github.workspace}}/gradlew build -x test

      - name: Get Project Name
        id: project-name
        run: echo "::set-output name=PROJECT_NAME::$(${{github.workspace}}/gradlew properties --no-daemon --console=plain |grep '^name:' |awk '{printf $2}')"

      - name: Get Project Version
        id: project-version
        run: echo "::set-output name=VERSION_NAME::$(${{github.workspace}}/gradlew properties --no-daemon --console=plain |grep '^version:' |awk '{printf $2}')"

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push to Docker Hub
        uses: docker/build-push-action@v3
        with:
          context: ./app
          push: true
          tags: ${{secrets.DOCKER_USERNAME}}/${{ steps.project-name.outputs.PROJECT_NAME }}:${{ steps.project-version.outputs.VERSION_NAME }}
